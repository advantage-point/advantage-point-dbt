name: Publish dbt Docs

on:
  push:
    branches:
      - main

jobs:
  # First job: build dbt docs
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo contents
      - name: Checkout
        uses: actions/checkout@v4

      # Install Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Install dbt with BigQuery adapter
      - name: Install dbt
        run: pip install dbt-bigquery

      # Write the service account JSON to a file (preserves multiline)
      - name: Write service account key
        run: |
          cat > sa.json <<'EOF'
          $SA_ADVPOINT_PROD_DBT_KEY_JSON
          EOF
        env:
          SA_ADVPOINT_PROD_DBT_KEY_JSON: ${{ secrets.SA_ADVPOINT_PROD_DBT_KEY_JSON }}
        working-directory: ./advantage_point

      # Run dbt to install deps and generate docs
      - name: Generate dbt docs
        env:
          SA_ADVPOINT_PROD_DBT_KEYFILE: ./sa.json   # matches profiles.yml
        run: |
          dbt deps --profiles-dir ./profiles --profile advantage_point_dbt_docs_ci
          dbt docs generate --profiles-dir ./profiles --profile advantage_point_dbt_docs_ci
        working-directory: ./advantage_point

      # Upload the generated docs (target/) as an artifact for Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: advantage_point/target

      # Cleanup: remove the service account key file
      - name: Remove service account key
        run: rm -f sa.json
        working-directory: ./advantage_point

  # Second job: deploy to GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Deploy the uploaded artifact to GitHub Pages
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4

      # Show final URL in logs
      - name: Show Pages URL
        run: echo "dbt docs available at ${{ steps.deployment.outputs.page_url }}"
